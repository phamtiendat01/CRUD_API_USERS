basePath: /api/v1
definitions:
  handlers.CreateUserRequest:
    properties:
      avatar_url:
        type: string
      city:
        maxLength: 100
        type: string
      country:
        maxLength: 100
        type: string
      date_of_birth:
        description: yyyy-mm-dd
        type: string
      email:
        type: string
      full_name:
        maxLength: 100
        type: string
      gender:
        enum:
        - male
        - female
        - other
        type: string
      password:
        maxLength: 100
        minLength: 6
        type: string
      phone:
        maxLength: 20
        type: string
      postal_code:
        maxLength: 20
        type: string
      role:
        enum:
        - user
        - admin
        type: string
      state:
        maxLength: 100
        type: string
      status:
        enum:
        - active
        - inactive
        - banned
        type: string
      street:
        maxLength: 255
        type: string
      username:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - email
    - password
    - username
    type: object
  handlers.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  handlers.LoginRequest:
    properties:
      identifier:
        description: username hoặc email
        type: string
      password:
        description: mật khẩu
        maxLength: 100
        minLength: 6
        type: string
    required:
    - identifier
    - password
    type: object
  handlers.LoginResponse:
    properties:
      access_token:
        description: JWT
        type: string
      expires_in:
        description: giây
        type: integer
      token_type:
        description: '"Bearer"'
        type: string
      user:
        $ref: '#/definitions/handlers.UserDoc'
    type: object
  handlers.RegisterRequest:
    properties:
      confirm_password:
        type: string
      email:
        type: string
      password:
        maxLength: 100
        minLength: 6
        type: string
    required:
    - confirm_password
    - email
    - password
    type: object
  handlers.RegisterResponse:
    properties:
      message:
        type: string
      user:
        $ref: '#/definitions/handlers.UserDoc'
    type: object
  handlers.UpdateUserRequest:
    properties:
      avatar_url:
        type: string
      city:
        maxLength: 100
        type: string
      country:
        maxLength: 100
        type: string
      date_of_birth:
        type: string
      email:
        type: string
      full_name:
        maxLength: 100
        type: string
      gender:
        enum:
        - male
        - female
        - other
        type: string
      password:
        maxLength: 100
        minLength: 6
        type: string
      phone:
        maxLength: 20
        type: string
      postal_code:
        maxLength: 20
        type: string
      role:
        enum:
        - user
        - admin
        type: string
      state:
        maxLength: 100
        type: string
      status:
        enum:
        - active
        - inactive
        - banned
        type: string
      street:
        maxLength: 255
        type: string
      username:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - email
    - username
    type: object
  handlers.UserDoc:
    properties:
      avatar_url:
        type: string
      city:
        type: string
      country:
        type: string
      created_at:
        type: string
      date_of_birth:
        type: string
      email:
        type: string
      full_name:
        type: string
      gender:
        type: string
      id:
        type: integer
      phone:
        type: string
      postal_code:
        type: string
      role:
        type: string
      state:
        type: string
      status:
        type: string
      street:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: CRUD người dùng mẫu, sạch và tối giản.
  title: User API (Gin + Swagger)
  version: "1.0"
paths:
  /admin/users:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.UserDoc'
            type: array
      security:
      - BearerAuth: []
      summary: Danh sách người dùng
      tags:
      - Admin
    post:
      consumes:
      - application/json
      parameters:
      - description: User payload
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.UserDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Tạo người dùng
      tags:
      - Admin
  /admin/users/{id}:
    delete:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Xoá người dùng
      tags:
      - Admin
    get:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.UserDoc'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Lấy người dùng theo ID
      tags:
      - Admin
    put:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User payload
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.UserDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Cập nhật người dùng
      tags:
      - Admin
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login payload
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Đăng nhập (lấy access/refresh token)
      tags:
      - Auth
  /auth/logout:
    post:
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
      summary: Đăng xuất (revoke refresh token & clear cookie)
      tags:
      - Auth
  /auth/me:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.UserDoc'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Thông tin người dùng hiện tại
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Register payload
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/handlers.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.RegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Đăng ký tài khoản mới
      tags:
      - Auth
securityDefinitions:
  BearerAuth:
    description: 'Nhập dạng: Bearer <JWT>'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
